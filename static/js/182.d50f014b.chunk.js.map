{"version":3,"file":"static/js/182.d50f014b.chunk.js","mappings":"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","sources":["components/App/App.styled.js","components/Loader/Loader.jsx","redux/contacts/contactsSelectors.js","components/Form/Form.styled.js","components/Form/Form.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","redux/filter/filterSelector.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 40px;\n  gap: 20px;\n  align-items: center;\n`;\nexport const Title = styled.h1`\n  color: #331616a3;\n`;\nexport const ContactTitle = styled.h2`\n  font-size: 1.8em;\n  margin-block-end: 0.57em;\n  margin-block-start: 0.57em;\n`;\nexport const Warning = styled.p`\n  padding: 12px;\n  color: green;\n  font-size: 24px;\n  display: flex;\n  width: 300px;\n  border: solid 2px;\n  border-color: green;\n  border-radius: 8px;\n  gap: 12px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dna } from 'react-loader-spinner';\n\nconst Loader = isLoading => {\n  return (\n    <Dna\n      visible={Boolean(isLoading)}\n      height=\"480\"\n      width=\"480\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"dna-wrapper\"\n    />\n  );\n};\nexport default Loader;\n\nLoader.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n};\n","export const selectContacts = state => state.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import styled from '@emotion/styled';\n\nexport const FormBox = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n  min-width: 350px;\n  border: solid 2px;\n  border-radius: 8px;\n  padding: 8px;\n`;\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\nexport const FormInput = styled.input`\n  min-width: 320px;\n  padding: 8px;\n`;\nexport const FormButton = styled.button`\n  padding: 8px;\n  background-color: #00000085;\n  color: #fff;\n  border-color: #00000085;\n  border-radius: 8px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport {\n  FormBox,\n  FormLabel,\n  FormInput,\n  FormButton,\n} from 'components/Form/Form.styled';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = form.name.value;\n    const number = form.number.value;\n    if (\n      contacts.items.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return Notify.warning(`${name} is already in contacts`);\n    }\n    dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <FormBox onSubmit={handleSubmit}>\n      <FormLabel htmlFor=\"\">\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n      <FormLabel htmlFor=\"\">\n        Number\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n      <FormButton type=\"submit\">Add contact</FormButton>\n    </FormBox>\n  );\n};\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 350px;\n  background-color: #bdbdbdd1;\n  padding: 4px 8px;\n  border-radius: 4px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n\nimport PropTypes from 'prop-types';\nimport { Item } from 'components/ContactItem/ContactItem.styled';\nimport { FormButton } from 'components/Form/Form.styled';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n  return (\n    <Item>\n      <p>{name}:</p>\n      <p>{number}</p>\n      <FormButton onClick={handleDelete}>DELETE</FormButton>\n    </Item>\n  );\n};\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n`;\n","export const selectFilter = state => state.filters.status;\n","import { useSelector } from 'react-redux';\n\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport { List } from 'components/ContactList/ContactList.styled';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { selectFilter } from 'redux/filter/filterSelector';\n\nconst getVisibleContacts = (filter, contacts) => {\n  const normalizedFilter = filter.toLowerCase().trim();\n  return contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const visibleContacts = getVisibleContacts(filter, contacts);\n\n  return visibleContacts.map(({ id, name, number }) => (\n    <List key={id}>\n      <ContactItem name={name} id={id} number={number} />\n    </List>\n  ));\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { setFilter } from 'redux/filter/filtersSlice';\nimport { useDispatch } from 'react-redux';\nimport { FormLabel, FormInput } from 'components/Form/Form.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <FormLabel htmlFor=\"\">\n      Find contacts by name\n      <FormInput\n        type=\"text\"\n        name=\"filter\"\n        onChange={event => dispatch(setFilter(event.target.value))}\n      />\n    </FormLabel>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport {\n  Container,\n  Title,\n  ContactTitle,\n  Warning,\n} from 'components/App/App.styled';\n\nimport Loader from 'components/Loader/Loader';\nimport ContactForm from 'components/Form/Form';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\n\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n} from 'redux/contacts/contactsSelectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <ContactTitle>Contacts</ContactTitle>\n      {isLoading && !error && <Loader isLoading={isLoading} />}\n      {contacts.items.length > 0 ? (\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      ) : (\n        <Warning>\n          Your phone book is empty, your first contact has been added\n        </Warning>\n      )}\n    </Container>\n  );\n}\n"],"names":["Container","styled","Title","ContactTitle","Warning","isLoading","visible","Boolean","height","width","ariaLabel","wrapperStyle","wrapperClass","selectContacts","state","contacts","selectIsLoading","selectError","error","FormBox","FormLabel","FormInput","FormButton","dispatch","useDispatch","useSelector","onSubmit","event","preventDefault","form","target","name","value","number","items","find","contact","toLowerCase","Notify","addContact","reset","htmlFor","type","pattern","title","required","Item","id","onClick","deleteContact","List","selectFilter","filters","status","visibleContacts","filter","normalizedFilter","trim","includes","getVisibleContacts","map","onChange","setFilter","Contacts","useEffect","fetchContacts","length"],"sourceRoot":""}